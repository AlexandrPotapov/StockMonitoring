//
//  StockRouter.swift
//  StockMonitoring
//
//  Created by Александр on 30.03.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol StockRoutingLogic
{
  func routeToCard(segue: UIStoryboardSegue?)
}

protocol StockDataPassing
{
  var dataStore: StockDataStore? { get }
}

class StockRouter: NSObject, StockRoutingLogic, StockDataPassing
{
  weak var viewController: StockViewController?
  var dataStore: StockDataStore?
  
  // MARK: Routing
  
  func routeToCard(segue: UIStoryboardSegue?)
  {
    if let segue = segue {
      let destinationVC = segue.destination as! CardViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToCard(source: dataStore!, destination: &destinationDS)
    } else {
      let storyboard = UIStoryboard(name: "Main", bundle: nil)
      let destinationVC = storyboard.instantiateViewController(withIdentifier: "Card2") as! CardViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToCard(source: dataStore!, destination: &destinationDS)
      navigateToCard(source: viewController!, destination: destinationVC)
    }
  }

  // MARK: Navigation
  
  func navigateToCard(source: StockViewController, destination: CardViewController)
  {
    source.show(destination, sender: nil)
  }
  
  // MARK: Passing data
  
  func passDataToCard(source: StockDataStore, destination: inout CardDataStore)
  {
    let indexPath = viewController?.stockTableView.indexPathForSelectedRow
    let selectedRow = indexPath?.row
    if viewController?.stocksIsSelect == true {
        destination.stock = source.stocks[selectedRow!]
    }
    if viewController?.favouriteIsSelect == true {
        destination.stock = source.favouriteStocks[selectedRow!]
    }
    if viewController?.searchIsSelect == true {
        destination.stock = source.foundStocks[selectedRow!]
    }
    destination.favouriteStocksCoreDataStore = source.favouriteStocksCoreDataStore
    destination.selectedRow = selectedRow
  }
}
